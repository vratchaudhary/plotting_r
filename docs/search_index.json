[["index.html", "Plotting in R using ggplot Chapter 1 Prerequisites", " Plotting in R using ggplot Vratika Chaudhary 2020-12-10 Chapter 1 Prerequisites R programming language Installed packages: pkg&lt;-c(&quot;ggplot2&quot;,&quot;ggpubr&quot;,&quot;auk&quot;,&quot;datasets&quot;,&quot;ggpubr&quot;,&quot;ggcorrplot&quot;) install.packages(pkg) "],["intro.html", "Chapter 2 Data preperation", " Chapter 2 Data preperation We can enter CSV data in R using read.csv function or read_csv function from readr package. However, for now we will use data that already exist in the datasets packages that we downloaded Lets load the library ‘datsets’ library(datasets) Lets look at the chickeweight data head(ChickWeight) ## weight Time Chick Diet ## 1 42 0 1 1 ## 2 51 2 1 1 ## 3 59 4 1 1 ## 4 64 6 1 1 ## 5 76 8 1 1 ## 6 93 10 1 1 "],["introduction-to-ggplot2.html", "Chapter 3 Introduction to ggplot2 3.1 Creating the building blocks of the graph 3.2 Adding geom_objects 3.3 Making the plot visually more appealing", " Chapter 3 Introduction to ggplot2 The package ggplot2 is extremely functional and useful. It created graphs in layers and therefore is very intutive. It adds layers on top of each other 3.1 Creating the building blocks of the graph ggplot(data = dataname, mapping= aes(x=xaxis, y= yaxis)) ggplot function from ggplot2 package requires two arguments: data is the object name you gave to your data sets Mapping is the specifications of the variables we want to visualize and are places withing the ‘aes’ function short for aesthetics. Let’s bring back the chick data and let’s look how chicks have grown over time library(ggplot2) par(mar = c(4, 4, .1, .1)) ggplot(data=ChickWeight, mapping=aes(x=Time, y=weight)) Figure 3.1: Building block We see a box, and we see the correct axis but we don’t see anything else- why? 3.2 Adding geom_objects Because yes we told ggplot what variables we want to plot, but we haven’t told it what type of plot we want. We can do this by adding a ‘geom_object’. For this purpose, let’s make a line plot. We can do so by adding a ‘geom_line’ object to the previous layer. We join the two layers by a ‘+’ sign. library(ggplot2) ggplot(ChickWeight, mapping= aes(x=Time, y=weight))+ geom_line() Figure 3.2: Line plot Hey! We got some lines, but it looks weird!!! That is becasue we plotted all the data together, we had 48 chicks but we plotted both of them in the same plot. So let’s make them distinct. We can simply do so by giving a distinct color to each chick library(ggplot2) ggplot(ChickWeight, aes(x=Time, y=weight, group=Chick))+ geom_line() Figure 3.3: Line plot with colors 3.3 Making the plot visually more appealing Let’s do the following: 1. Increase the size of the lines 2. Lighten the background using the theme function in ggplot2 3. Increase the size of axis text and titles 4. Change y axis label library(ggplot2) ggplot(ChickWeight, aes(x=Time, y=weight, group=Chick),size=2)+ geom_line()+ theme_minimal(base_size = 20)+ ylab(&quot;Weight&quot;) Figure 3.4: Better looking line plot with colors "],["methods.html", "Chapter 4 Methods", " Chapter 4 Methods We describe our methods in this chapter. "],["applications.html", "Chapter 5 Applications 5.1 Example one 5.2 Example two", " Chapter 5 Applications Some significant applications are demonstrated in this chapter. 5.1 Example one 5.2 Example two "],["final-words.html", "Chapter 6 Final Words", " Chapter 6 Final Words We have finished a nice book. "],["references.html", "References", " References "]]
